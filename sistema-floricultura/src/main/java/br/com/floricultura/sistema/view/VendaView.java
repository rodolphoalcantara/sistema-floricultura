/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.floricultura.sistema.view;

//import br.com.floricultura.sistema.model.Cliente;
import br.com.floricultura.sistema.controller.CadastroClienteController;
import br.com.floricultura.sistema.controller.VendaController;
import br.com.floricultura.sistema.dao.ItemVendaDAO;
import br.com.floricultura.sistema.dao.ProdutoDAO;
import br.com.floricultura.sistema.model.CadastroCliente;
import br.com.floricultura.sistema.model.ItemVenda;
import br.com.floricultura.sistema.model.Produto;
import br.com.floricultura.sistema.model.Venda;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.stream.Collectors;

/**
 * Tela de Vendas do sistema
 * @author rodolpho
 */
public class VendaView extends javax.swing.JFrame {

    private DefaultTableModel tableModel;

    //atributos para registro em banco
    // private Cliente cliente;
    private Produto prodEmDestaque;
    private List<Produto> listaProdutosCbo;
    private List<ItemVenda> carrinho = new ArrayList<ItemVenda>();
    private CadastroCliente cliente;

    public VendaView() {
        initComponents();

        setLocationRelativeTo(null);
        //setando para alguns campos ficarem desabilitados
        cboProduto.setEnabled(false);
        btnDeletar.setEnabled(false);
        tableModel = (DefaultTableModel) tblCarrinho.getModel();

        List<String> listaTipo = ProdutoDAO.listarTipos();
        preencherCbo(cboTipo, listaTipo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        lblProduto = new javax.swing.JLabel();
        lblQuantidade = new javax.swing.JLabel();
        cboProduto = new javax.swing.JComboBox<>();
        cboTipo = new javax.swing.JComboBox<>();
        lblTipo = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JFormattedTextField();
        lblPreco = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarrinho = new javax.swing.JTable();
        btnDeletar = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnConfirmar = new javax.swing.JButton();
        btn_Sair = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblCliente = new javax.swing.JLabel();
        btnProcurarCliente = new javax.swing.JButton();
        lblCPF = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        txtCPF = new javax.swing.JFormattedTextField();
        menuTelaCadastroCliente = new javax.swing.JMenuBar();
        jMenu_Arquivo = new javax.swing.JMenu();
        menu = new javax.swing.JMenuItem();
        jMenu_Sair = new javax.swing.JMenu();
        jMenuItem_Sair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Venda de Flores", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 14))); // NOI18N

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Add-item-icon (1).png"))); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        lblProduto.setText("Produto");

        lblQuantidade.setText("Quantidade");

        cboProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecione o produto --", "Tulipa", "Rosa", "Lírio", " " }));
        cboProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProdutoActionPerformed(evt);
            }
        });

        cboTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecione o tipo --", "Buque", "Unidade" }));
        cboTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoActionPerformed(evt);
            }
        });

        lblTipo.setText("Tipo");

        txtQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtQuantidade.setText("0");
        txtQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantidadeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantidadeFocusLost(evt);
            }
        });
        txtQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQuantidadeKeyTyped(evt);
            }
        });

        lblPreco.setText("Preço Unitário:         R$");

        txtPreco.setEditable(false);
        txtPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblTipo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblPreco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPreco)))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblProduto)
                    .addComponent(lblQuantidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtQuantidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cboProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProduto)
                    .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipo))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantidade)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPreco)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdicionar, cboProduto, cboTipo, txtPreco, txtQuantidade});

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Carrinho de compras", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N

        tblCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "Produto", "Quantidade", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCarrinho.setColumnSelectionAllowed(true);
        tblCarrinho.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblCarrinhoFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(tblCarrinho);
        tblCarrinho.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblCarrinho.getColumnModel().getColumnCount() > 0) {
            tblCarrinho.getColumnModel().getColumn(0).setResizable(false);
            tblCarrinho.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblCarrinho.getColumnModel().getColumn(1).setResizable(false);
            tblCarrinho.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblCarrinho.getColumnModel().getColumn(2).setResizable(false);
            tblCarrinho.getColumnModel().getColumn(2).setPreferredWidth(50);
            tblCarrinho.getColumnModel().getColumn(3).setResizable(false);
            tblCarrinho.getColumnModel().getColumn(3).setPreferredWidth(35);
        }

        btnDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Close-icon.png"))); // NOI18N
        btnDeletar.setText("Deletar");
        btnDeletar.setPreferredSize(new java.awt.Dimension(74, 28));
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        lblTotal.setText("Total:     R$");

        txtTotal.setEditable(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTotal)
                        .addGap(3, 3, 3)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTotal)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDeletar, txtTotal});

        btnConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/check-icon.png"))); // NOI18N
        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btn_Sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Users-Exit-icon.png"))); // NOI18N
        btn_Sair.setText("Sair");
        btn_Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SairActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selecione o cliente", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N

        lblCliente.setText("Nome:");

        btnProcurarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/business_man_usersearch_thesearch_theclient_2356_1.png"))); // NOI18N
        btnProcurarCliente.setText("Procurar");
        btnProcurarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarClienteActionPerformed(evt);
            }
        });

        lblCPF.setText("CPF:");

        txtNomeCliente.setEditable(false);
        txtNomeCliente.setText("Por gentileza, procure o cliente pelo CPF");

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFActionPerformed(evt);
            }
        });
        txtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCPFKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblCPF))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCliente)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtCPF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProcurarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNomeCliente))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCPF)
                    .addComponent(btnProcurarCliente))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCliente))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnProcurarCliente, txtCPF, txtNomeCliente});

        jMenu_Arquivo.setText("Arquivo");

        menu.setText("Menu");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });
        jMenu_Arquivo.add(menu);

        menuTelaCadastroCliente.add(jMenu_Arquivo);

        jMenu_Sair.setText("Opções");

        jMenuItem_Sair.setText("Sair");
        jMenuItem_Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SairActionPerformed(evt);
            }
        });
        jMenu_Sair.add(jMenuItem_Sair);

        menuTelaCadastroCliente.add(jMenu_Sair);

        setJMenuBar(menuTelaCadastroCliente);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_Sair, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Sair)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcurarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarClienteActionPerformed

        String cpf = txtCPF.getText().replace(".", "").replace("-", "");
        if (cpf.length() == 11 && !cpf.trim().equals("")) {
            try {
                cliente = CadastroClienteController.consultarPorCPF(cpf).get(0);
                if (cliente != null) {
                    txtNomeCliente.setText(cliente.getNomeCliente());
                }
            } catch (IndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(this, "OPS! Não consegui encontrar nenhum cliente com este CPF", "Falha ao procurar", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, preencha o CPF corretamente!", "", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnProcurarClienteActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        double total = 0.0;
        //atualiza o valor total de acordo com os itens do carrinho 
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            int quantidade = (int) tableModel.getValueAt(i, 2);
            double preco = (double) tableModel.getValueAt(i, 3);
            total += preco * quantidade;
        }

        txtTotal.setText(String.format("%.2f", total));
    }//GEN-LAST:event_txtTotalActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        int linhaSelecionada = tblCarrinho.getSelectedRow();
        if (tblCarrinho.getSelectedRow() >= 0) {
            tableModel.removeRow(linhaSelecionada);
            carrinho.remove(linhaSelecionada);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha", "Erro ao Deletar", JOptionPane.ERROR_MESSAGE);
        }
        txtTotalActionPerformed(evt);
        btnDeletar.setEnabled(false);

    }//GEN-LAST:event_btnDeletarActionPerformed

    private void tblCarrinhoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblCarrinhoFocusGained
        btnDeletar.setEnabled(true);
    }//GEN-LAST:event_tblCarrinhoFocusGained

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        //verifica se existe um cliente selecionado e se existe algum item no carrinho
        if (tableModel.getRowCount() != 0 && !txtNomeCliente.getText().equals("Por gentileza, procure o cliente pelo CPF")) {
            int dialogConfirmacao = JOptionPane.showConfirmDialog(this, "Deseja finalizar venda ?", "Finalização de venda", JOptionPane.YES_NO_OPTION);
            if (dialogConfirmacao == 0 /*yes*/) {
                /*LOGICA DE VENDA*/
                List<ItemVenda> finalizacaoVenda = carrinho;
                //Instanciando uma venda
                Venda venda = VendaController.salvar(cliente, new Date());

                //Preenchendo a lista de itens venda com o id da venda criada e salvando no banco
                Boolean tudoOk = true;
                String produtosSemEstoque = "";
                for (int i = 0; i < finalizacaoVenda.size(); i++) {
                    finalizacaoVenda.get(i).setFk_id_venda(venda.getId());
                    int deducaoEstoque = finalizacaoVenda.get(i).getProduto().getEstoque() - finalizacaoVenda.get(i).getQuantidade();
                    if (deducaoEstoque >= 0) {
                        finalizacaoVenda.get(i).getProduto().setEstoque(deducaoEstoque);
                    } else {
                        produtosSemEstoque += i +" "
                                + finalizacaoVenda.get(i).getProduto().getTipo()+
                                " "+ finalizacaoVenda.get(i).getProduto().getNome() +
                                        " " + finalizacaoVenda.get(i).getQuantidade() + " |";
                        tudoOk = false;
                    }
                }
                if (tudoOk) {
                    /*Logica de atualizacao da table produtos e adicao dos itens na table itens_venda*/
                    for (ItemVenda item : finalizacaoVenda) {
                        try{
                        ProdutoDAO.atualizar(item.getProduto());
                        ItemVendaDAO.save(item);
                        } catch (ClassNotFoundException ex) {
                            ex.printStackTrace();
                        }
                    }
                    JOptionPane.showMessageDialog(this, "Venda Finalizada");
                    this.dispose();
                }else{
                    JOptionPane.showMessageDialog(this, "Não foi possível finalizar pois os seguintes itens não possuem estoque: " + produtosSemEstoque, "Erro ao finalizar venda.", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            if (tableModel.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Não é possível finalizar uma venda sem itens no carrinho !", "Erro ao finalizar venda.", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Não é possível finalizar uma venda sem um cliente !", "Erro ao finalizar venda.", JOptionPane.ERROR_MESSAGE);
            }
        }


    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btn_SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SairActionPerformed
        int retorno = JOptionPane.showConfirmDialog(null, "Deseja realmente SAIR ? ", " Deseja Sair ?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (retorno == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_btn_SairActionPerformed

    private void jMenuItem_SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SairActionPerformed
        int retorno = JOptionPane.showConfirmDialog(null, "Deseja realmente SAIR ? Os dados não salvos serão perdidos!", " Deseja Sair ?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (retorno == 0) {
            System.exit(0);
        }

    }//GEN-LAST:event_jMenuItem_SairActionPerformed

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        this.dispose();
    }//GEN-LAST:event_menuActionPerformed

    private void txtQuantidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantidadeKeyTyped
        //validação do campo quantidade para aceitar apenas numeros
        char c = evt.getKeyChar();

        if (((c < '0') || (c > '9')) && ((c != KeyEvent.VK_BACK_SPACE) || (c != KeyEvent.VK_DELETE))) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "O campo quantidade aceita apenas números", "Formato incorreto", JOptionPane.ERROR_MESSAGE);
        }
        //validação do campo quantidade para ter um maximo de caracteres
        if (txtQuantidade.getText().length() >= 4) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Você ultrapassou o limite de 4 digitos", "Limite ultrapassado", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtQuantidadeKeyTyped

    private void cboTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoActionPerformed
        //verifica se foi escolhido algum tipo para que possa habilitar a escolha do produto
        if (cboTipo.getSelectedIndex() != 0) {
            cboProduto.setEnabled(true);

            listaProdutosCbo = ProdutoDAO.listarPorTipo(String.valueOf(cboTipo.getSelectedItem()));
            List<String> nomesProdutos = listaProdutosCbo.stream().map(prod -> prod.getNome()).collect(Collectors.toList());

            preencherCbo(cboProduto, nomesProdutos);

        } else {
            cboProduto.setSelectedIndex(0);
            cboProduto.setEnabled(false);
        }
    }//GEN-LAST:event_cboTipoActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        //checa se os campos estão preenchidos corretamente e adiciona na tabela de carrinho
        int qtdSolicitada = Integer.parseInt(txtQuantidade.getText());
        if (qtdSolicitada <= prodEmDestaque.getEstoque()) {
            if ((cboTipo.getSelectedIndex() != 0) && (cboProduto.getSelectedIndex() != 0) && (Integer.parseInt(txtQuantidade.getText()) != 0)) {
                tableModel.addRow(new Object[]{
                    prodEmDestaque.getTipo(),
                    prodEmDestaque.getNome(),
                    qtdSolicitada,
                    prodEmDestaque.getValor()
                });
                //adiciona um itemvenda no carrinho
                carrinho.add(new ItemVenda(qtdSolicitada, new BigDecimal(prodEmDestaque.getValor() * qtdSolicitada), prodEmDestaque));
                //reseta valores
                cboTipo.setSelectedIndex(0);
                txtQuantidade.setValue(0);

                txtTotalActionPerformed(evt);
            } else {
                JOptionPane.showMessageDialog(this, "Por favor, realize o preenchimento dos dados corretamente", "Preenchimento Incompleto", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Infelizmente só possímos " + prodEmDestaque.getEstoque() + " unidades deste produto em estoque", "Oops...", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void txtPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoActionPerformed
        // logica de visualizacao do preco do produto selecionado no cboProduto
    }//GEN-LAST:event_txtPrecoActionPerformed

    private void txtQuantidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeFocusGained
        if (txtQuantidade.getText().equals("0")) {
            txtQuantidade.setText("");
        }
    }//GEN-LAST:event_txtQuantidadeFocusGained

    private void txtQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeFocusLost
        if (txtQuantidade.getText().equals("")) {
            txtQuantidade.setText("0");
        }
    }//GEN-LAST:event_txtQuantidadeFocusLost

    private void txtCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFActionPerformed

    private void txtCPFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCPFKeyTyped
        char caracter = evt.getKeyChar();

        if (((caracter < '0') || (caracter > '9')) && ((caracter != KeyEvent.VK_BACK_SPACE) || (caracter != KeyEvent.VK_BACK_SPACE))) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ops! Informe apenas os numeros do seu CPF ok ?!",
                    "Dados Pessoais ", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtCPFKeyTyped

    private void cboProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProdutoActionPerformed

        if (cboProduto.getSelectedIndex() != 0) {
            prodEmDestaque = listaProdutosCbo.get(cboProduto.getSelectedIndex() - 1);

            txtPreco.setText(String.format("%.2f", prodEmDestaque.getValor()));

        }
    }//GEN-LAST:event_cboProdutoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VendaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VendaView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnProcurarCliente;
    private javax.swing.JButton btn_Sair;
    private javax.swing.JComboBox<String> cboProduto;
    private javax.swing.JComboBox<String> cboTipo;
    private javax.swing.JMenuItem jMenuItem_Sair;
    private javax.swing.JMenu jMenu_Arquivo;
    private javax.swing.JMenu jMenu_Sair;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblPreco;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JMenuItem menu;
    private javax.swing.JMenuBar menuTelaCadastroCliente;
    private javax.swing.JTable tblCarrinho;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JFormattedTextField txtQuantidade;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    public List<String> listarParaComboBox(List<String> lista) {
        List<String> listaCBO = new ArrayList<String>();

        for (int i = 0; i <= lista.size(); i++) {
            if (i == 0) {
                listaCBO.add("-- Selecione --");
            } else {
                listaCBO.add(lista.get(i - 1));
            }
        }

        return listaCBO;
    }

    public void preencherCbo(JComboBox cbo, List<String> lista) {

        List<String> listaTipos = listarParaComboBox(lista);

        if (!listaTipos.isEmpty()) {
            cbo.setModel(new DefaultComboBoxModel<String>(listaTipos.toArray(new String[0])));
        }
    }

}
